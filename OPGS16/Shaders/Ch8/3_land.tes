#version 430 core

layout (quads) in;

uniform sampler2D tex_displacement;
uniform mat4 mvp;
uniform float dmap_depth;

in TCS_OUT {
	vec2 tessCoord;
} tes_in[];

out TES_OUT {
	vec2 texCoord;
	float height;
} tes_out;

void main() {
	vec2 tc1 = mix(tes_in[0].tessCoord, tes_in[1].tessCoord, gl_TessCoord.x);
	vec2 tc2 = mix(tes_in[2].tessCoord, tes_in[3].tessCoord, gl_TessCoord.x);
	vec2 tc = mix(tc2, tc1, gl_TessCoord.y);

	vec4 p1 = mix(gl_in[0].gl_Position, gl_in[1].gl_Position, gl_TessCoord.x);
	vec4 p2 = mix(gl_in[2].gl_Position, gl_in[3].gl_Position, gl_TessCoord.x);
	vec4 p = mix(p2, p1, gl_TessCoord.y);

	p.y += texture(tex_displacement, tc).r * dmap_depth;
	gl_Position = mvp * p;
	tes_out.texCoord = tc;
	tes_out.height = p.y;
}